<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="RssReaderSample.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RssReaderSample"
    xmlns:common="using:RssReaderSample.Common"
    xmlns:datamodel="using:RssReaderSample.DataModel"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!--
            このページで表示されるグループ化されたアイテムのコレクションは、グループ内のアイテムを
            仮想化できないため、完全なアイテム リストのサブセットにバインドされます
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding Groups}"
            IsSourceGrouped="true"
            ItemsPath="FeedItems"/>
        <DataTemplate x:Key="GridViewFeedTemplate">
            <Grid d:DataContext="{d:DesignInstance Type=datamodel:FeedItem, IsDesignTimeCreatable=True}" HorizontalAlignment="Left" Width="250" Height="250">
        		<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}"/>
        		<StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
        			<TextBlock Text="{Binding Title}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
        			<TextBlock Text="{Binding PublishedDate}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
        		</StackPanel>
        	</Grid>
        </DataTemplate>
        <DataTemplate x:Key="ListViewFeedTemplate">
            <Grid d:DataContext="{d:DesignInstance Type=datamodel:FeedItem, IsDesignTimeCreatable=True}" Margin="6">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="Auto"/>
        			<ColumnDefinition Width="*"/>
        		</Grid.ColumnDefinitions>
        		<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="60" Height="60"/>
        		<StackPanel Grid.Column="1" Margin="10,0,0,0">
        			<TextBlock Text="{Binding Title}" Style="{StaticResource ItemTextStyle}" MaxHeight="40"/>
        			<TextBlock Text="{Binding PublishedDate}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
        		</StackPanel>
        	</Grid>
        </DataTemplate>
        <DataTemplate x:Key="ZoomedOutViewItemTemplate">
        	<Grid Height="110" Width="480" Margin="10"
                  DataContext="{Binding Group}"
                  d:DataContext="{d:DesignInstance Type=datamodel:Feed, IsDesignTimeCreatable=True}">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="Auto"/>
        			<ColumnDefinition Width="*"/>
        		</Grid.ColumnDefinitions>
        		<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110"/>
        		<StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
        			<TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
        			<TextBlock Text="{Binding LastUpdatedTime}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
        			<TextBlock Text="{Binding FeedItems.Count}" Style="{StaticResource GroupHeaderTextStyle}" MaxHeight="60" HorizontalAlignment="Right"/>
        		</StackPanel>
        	</Grid>
        </DataTemplate>
    </Page.Resources>
	<common:LayoutAwarePage.BottomAppBar>
		<AppBar>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<StackPanel Orientation="Horizontal"/>
				<StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
					<Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource AddAppBarButtonStyle}" Click="AddFeedButton_Click" ToolTipService.ToolTip="フィードの追加を行います"/>
					<Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource RefreshAppBarButtonStyle}" Click="RefreshFeedButton_Click" ToolTipService.ToolTip="フィードの再読み込みを行います"/>
				</StackPanel>
			</Grid>
		</AppBar>
	</common:LayoutAwarePage.BottomAppBar>

    <!--
        このグリッドは 2 つの行を定義するページのルート パネルとして機能します:
        * 行 0 には [戻る] ボタンおよびページ タイトルが含まれます
        * 行 1 には残りのページ レイアウトが含まれます
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- ほとんどのビューステートで使用される水平スクロール グリッド-->

        <!-- スナップの場合のみ使用される垂直スクロール リスト -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Grouped Items"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
            ItemTemplate="{StaticResource ListViewFeedTemplate}"
            SelectionMode="None"
            IsSwipeEnabled="false" IsItemClickEnabled="True" ItemClick="FeedItem_ItemClick">

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="7,7,0,0">
                                <Button
                                    AutomationProperties.Name="Group Title"
                                    Style="{StaticResource TextPrimaryButtonStyle}" Click="FeedHeader_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <!-- [戻る] ボタンおよびページ タイトル-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        <SemanticZoom x:Name="semanticZoom" Grid.Row="1">
        	<SemanticZoom.ZoomedInView>
        		<GridView
        			x:Name="itemGridView"
        			AutomationProperties.AutomationId="ItemGridView"
        			AutomationProperties.Name="Grouped Items"
        			Padding="116,0,40,46"
        			ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
        			ItemTemplate="{StaticResource GridViewFeedTemplate}"
        			SelectionMode="None"
        			IsSwipeEnabled="false" IsItemClickEnabled="True" ItemClick="FeedItem_ItemClick" Margin="0,0,-6,0">

        			<GridView.ItemsPanel>
        				<ItemsPanelTemplate>                        
        					<VirtualizingStackPanel Orientation="Horizontal"/>
        				</ItemsPanelTemplate>
        			</GridView.ItemsPanel>
        			<GridView.GroupStyle>
        				<GroupStyle>
        					<GroupStyle.HeaderTemplate>
        						<DataTemplate>
        							<Grid Margin="1,0,0,6">
        								<Button
        									AutomationProperties.Name="Group Title"
        									Style="{StaticResource TextPrimaryButtonStyle}" Click="FeedHeader_Click">
        									<StackPanel Orientation="Horizontal">
        										<TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
        										<TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
        									</StackPanel>
        								</Button>
        							</Grid>
        						</DataTemplate>
        					</GroupStyle.HeaderTemplate>
        					<GroupStyle.Panel>
        						<ItemsPanelTemplate>
        							<VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
        						</ItemsPanelTemplate>
        					</GroupStyle.Panel>
        				</GroupStyle>
        			</GridView.GroupStyle>
        		</GridView>

        	</SemanticZoom.ZoomedInView>
        	<SemanticZoom.ZoomedOutView>
        		<GridView ScrollViewer.IsHorizontalScrollChainingEnabled="False" ScrollViewer.IsVerticalScrollChainingEnabled="False" ItemsSource="{Binding CollectionGroups, Source={StaticResource groupedItemsViewSource}}" ItemTemplate="{StaticResource ZoomedOutViewItemTemplate}" Padding="116,0,0,10" SelectionMode="None"/>
        	</SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <VisualStateManager.VisualStateGroups>

            <!--表示状態には、アプリケーションのビューステートが反映されます -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- ページ全体では、縦方向に対して、より狭い 100 ピクセルの余白の規則を優先します -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,137,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    スナップの場合、[戻る] ボタンとタイトルには異なるスタイルが使用され、他のすべてのビューステートで表示されるグリッドに対して
                    一覧の表現が置き換えられます
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="semanticZoom">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<Visibility>Collapsed</Visibility>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
